import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { ArrowLeft, ArrowRight, Volume2, X } from 'lucide-react';
import { useTheme } from '../../contexts/ThemeContext';
import { useAuth } from '../../contexts/AuthContext';
import { useUserProgress } from '../../hooks/useUserProgress';
import { useTranslation } from 'react-i18next';

interface WritingExample {
  georgian: string;
  latin: string;
  english: string;
  explanation: string;
}

interface WritingTopic {
  id: string;
  title: string;
  description: string;
  examples: WritingExample[];
}

const AdvancedWritingPage: React.FC = () => {
  const { theme } = useTheme();
  const { user } = useAuth();
  const { updateProgress } = useUserProgress();
  const [expandedTopic, setExpandedTopic] = useState<string | null>(null);
  const [isPlaying, setIsPlaying] = useState<string | null>(null);
  const [timeSpent, setTimeSpent] = useState(0);
  const { t } = useTranslation();

  useEffect(() => {
    if (user) {
      updateProgress('advanced-writing', { timeSpent: 1 });
    }
    
    return () => {
      if (user && timeSpent > 0) {
        updateProgress('advanced-writing', { 
          timeSpent, 
          completed: timeSpent > 15
        });
      }
    };
  }, [user, timeSpent, updateProgress]);

  const writingTopics: WritingTopic[] = [
    {
      id: 'academic',
      title: 'Academic Writing in Georgian',
      description: 'Master formal academic writing styles and structures in Georgian.',
      examples: [
        {
          georgian: 'კვლევის მიზანია...',
          latin: 'kvlevis mizania...',
          english: 'The aim of the research is...',
          explanation: 'Standard academic phrase for introducing research objectives.'
        },
        {
          georgian: 'შედეგების თანახმად...',
          latin: 'shedegebis tanakhmad...',
          english: 'According to the results...',
          explanation: 'Used when presenting research findings.'
        }
      ]
    },
    {
      id: 'creative',
      title: 'Creative Writing Techniques',
      description: 'Explore creative writing styles and literary devices in Georgian.',
      examples: [
        {
          georgian: 'მზე ნელა ეშვებოდა ჰორიზონტზე',
          latin: 'mze nela eshveboda horizontze',
          english: 'The sun was slowly setting on the horizon',
          explanation: 'Descriptive writing example using metaphorical language.'
        },
        {
          georgian: 'ქარი ჩურჩულებდა ფოთლებში',
          latin: 'qari churchulebda potlebshi',
          english: 'The wind whispered through the leaves',
          explanation: 'Personification in creative writing.'
        }
      ]
    },
    {
      id: 'business',
      title: 'Professional Writing',
      description: 'Learn business and professional writing conventions in Georgian.',
      examples: [
        {
          georgian: 'გთხოვთ, გაითვალისწინოთ...',
          latin: 'gtkhovt, gaitvalitswinot...',
          english: 'Please consider...',
          explanation: 'Formal request in business correspondence.'
        },
        {
          georgian: 'დანართის სახით გიგზავნით...',
          latin: 'danartis sakhit gigzavnit...',
          english: 'I am sending you as an attachment...',
          explanation: 'Standard phrase for business emails.'
        }
      ]
    }
  ];

  const playAudio = (text: string) => {
    if (isPlaying === text) {
      setIsPlaying(null);
    } else {
      setIsPlaying(text);
      // Implement audio playback logic here
    }
  };

  const updateActivity = () => {
    setTimeSpent(prev => prev + 1);
  };

  return (
    <div className="pt-16 pb-16" onClick={updateActivity}>
      <section className={`py-12 ${theme === 'dark' ? 'bg-gray-800' : 'bg-red-50'}`}>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="md:flex md:items-center md:justify-between">
            <div className="md:w-1/2">
              <h1 className={`text-3xl md:text-4xl font-bold mb-4 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>
                <span className={theme === 'dark' ? 'text-red-400' : 'text-red-600'}>Advanced Writing</span> - მოწინავე წერა
              </h1>
              <p className={`text-lg mb-6 ${theme === 'dark' ? 'text-gray-300' : 'text-gray-700'}`}>
                Develop sophisticated writing skills in Georgian for academic, creative, and professional contexts.
              </p>
              <div className="flex flex-wrap gap-2">
                <Link
                  to="/advanced"
                  className={`inline-flex items-center px-4 py-2 rounded font-medium text-sm ${
                    theme === 'dark' 
                      ? 'bg-gray-700 text-white hover:bg-gray-600' 
                      : 'bg-white text-gray-800 hover:bg-gray-100'
                  }`}
                >
                  <ArrowLeft className="mr-2 h-4 w-4" />
                  Back to Advanced Level
                </Link>
              </div>
            </div>
          </div>
        </div>
      </section>

      <section className={`py-12 ${theme === 'dark' ? 'bg-gray-900' : 'bg-white'}`}>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <h2 className={`text-2xl font-bold mb-8 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>
            Writing Topics
          </h2>
          <div className="space-y-6">
            {writingTopics.map((topic) => (
              <div
                key={topic.id}
                className={`p-6 rounded-lg shadow-md ${
                  theme === 'dark' ? 'bg-gray-800' : 'bg-white'
                }`}
              >
                <div className="flex items-center justify-between">
                  <div>
                    <h3 className={`text-xl font-bold mb-2 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>
                      {topic.title}
                    </h3>
                    <p className={`${theme === 'dark' ? 'text-gray-300' : 'text-gray-600'}`}>
                      {topic.description}
                    </p>
                  </div>
                  <button
                    onClick={() => setExpandedTopic(expandedTopic === topic.id ? null : topic.id)}
                    className={`p-2 rounded-full transition-colors ${
                      theme === 'dark' ? 'hover:bg-gray-700' : 'hover:bg-gray-100'
                    }`}
                  >
                    <ArrowRight
                      className={`h-5 w-5 transform transition-transform ${
                        expandedTopic === topic.id ? 'rotate-90' : ''
                      } ${theme === 'dark' ? 'text-white' : 'text-gray-600'}`}
                    />
                  </button>
                </div>

                {expandedTopic === topic.id && (
                  <div className="p-6 border-t border-gray-200 dark:border-gray-700">
                    <div className="space-y-4">
                      {topic.examples.map((example, index) => (
                        <div
                          key={index}
                          className={`p-4 rounded-lg ${
                            theme === 'dark' ? 'bg-gray-700' : 'bg-gray-50'
                          }`}
                        >
                          <div className="flex items-center justify-between mb-2">
                            <span className={`text-xl font-bold ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>
                              {example.georgian}
                            </span>
                            <button
                              onClick={() => playAudio(example.georgian)}
                              className={`p-2 rounded-full transition-colors ${
                                isPlaying === example.georgian
                                  ? (theme === 'dark' ? 'bg-red-600' : 'bg-red-500')
                                  : (theme === 'dark' ? 'bg-gray-600 hover:bg-gray-500' : 'bg-gray-200 hover:bg-gray-300')
                              }`}
                            >
                              {isPlaying === example.georgian ? (
                                <X className="h-4 w-4 text-white" />
                              ) : (
                                <Volume2 className="h-4 w-4 text-gray-600 dark:text-gray-300" />
                              )}
                            </button>
                          </div>
                          <p className={`text-sm ${theme === 'dark' ? 'text-gray-400' : 'text-gray-500'}`}>
                            /{example.latin}/
                          </p>
                          <p className={`mt-2 ${theme === 'dark' ? 'text-gray-300' : 'text-gray-600'}`}>
                            {example.english}
                          </p>
                          <p className={`mt-1 text-sm ${theme === 'dark' ? 'text-gray-400' : 'text-gray-500'}`}>
                            {example.explanation}
                          </p>
                        </div>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      </section>
    </div>
  );
};

export default AdvancedWritingPage;